openapi: 3.0.0
info:
  title: SufirMart Loyalty System API
  version: 1.0.0-beta
  description: API для накопительной системы лояльности
servers:
  - url: http://localhost:8080

paths:
  /api/user/register:
    post:
      summary: Регистрация пользователя
      security: []   # метод доступен без авторизации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Пользователь успешно зарегистрирован и аутентифицирован
        '400':
          description: Неверный формат запроса
        '409':
          description: Логин уже занят
        '500':
          description: Внутренняя ошибка сервера

  /api/user/login:
    post:
      summary: Аутентификация пользователя
      security: []   # метод доступен без авторизации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Пользователь успешно аутентифицирован
        '400':
          description: Неверный формат запроса
        '401':
          description: Неверная пара логин/пароль
        '500':
          description: Внутренняя ошибка сервера

  /api/user/orders:
    post:
      summary: Загрузка номера заказа
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: "12345678903"
      responses:
        '200':
          description: Номер заказа уже был загружен этим пользователем
        '202':
          description: Новый номер заказа принят в обработку
        '400':
          description: Неверный формат запроса
        '401':
          description: Пользователь не аутентифицирован
        '409':
          description: Номер заказа уже был загружен другим пользователем
        '422':
          description: Неверный формат номера заказа
        '500':
          description: Внутренняя ошибка сервера

    get:
      summary: Получение списка загруженных заказов
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '204':
          description: Нет данных для ответа
        '401':
          description: Пользователь не авторизован
        '500':
          description: Внутренняя ошибка сервера

  /api/user/balance:
    get:
      summary: Получение текущего баланса
      responses:
        '200':
          description: Баланс пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '401':
          description: Пользователь не авторизован
        '500':
          description: Внутренняя ошибка сервера

  /api/user/balance/withdraw:
    post:
      summary: Списание баллов с накопительного счёта
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
      responses:
        '200':
          description: Успешная обработка запроса
        '401':
          description: Пользователь не авторизован
        '402':
          description: Недостаточно средств
        '422':
          description: Неверный номер заказа
        '500':
          description: Внутренняя ошибка сервера

  /api/user/withdrawals:
    get:
      summary: Получение информации о выводах средств
      responses:
        '200':
          description: Список выводов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Withdrawal'
        '204':
          description: Нет ни одного списания
        '401':
          description: Пользователь не авторизован
        '500':
          description: Внутренняя ошибка сервера

components:
  schemas:
    UserCredentials:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          example: user1
        password:
          type: string
          example: pass123

    Order:
      type: object
      required:
        - number
        - status
        - uploaded_at
      properties:
        number:
          type: string
          example: "12345678903"
        status:
          type: string
          enum: [NEW, PROCESSING, INVALID, PROCESSED]
        accrual:
          type: number
          format: float
          example: 500.0
        uploaded_at:
          type: string
          format: date-time
          example: "2020-12-10T15:12:01+03:00"

    Balance:
      type: object
      required:
        - current
        - withdrawn
      properties:
        current:
          type: number
          format: float
          example: 500.5
        withdrawn:
          type: number
          format: float
          example: 42

    WithdrawRequest:
      type: object
      required:
        - order
        - sum
      properties:
        order:
          type: string
          example: "2377225624"
        sum:
          type: number
          example: 751

    Withdrawal:
      type: object
      required:
        - order
        - sum
        - processed_at
      properties:
        order:
          type: string
          example: "2377225624"
        sum:
          type: number
          example: 500
        processed_at:
          type: string
          format: date-time
          example: "2020-12-09T16:09:57+03:00"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
